---
- name: Create user for Gitea.
  user:
    comment: Gitea
    name: "{{ gitea_user }}"
    home: "{{ gitea_user_home }}"

- name: Create Gitea root and log folder.
  file:
    path: "{{ gitea_user_home }}/gitea/log"
    state: directory
    owner: "{{ gitea_user }}"
    group: "{{ gitea_user }}"
    mode: 0755
    recurse: yes

- name: Check if Gitea is already installed.
  stat: path=/usr/local/bin/gitea
  register: gitea_bin

- name: Check gitea version
  shell: /usr/local/bin/gitea --version|cut -d ' ' -f 3
  check_mode: no
  changed_when: false
  register: gitea_bin_version
  when: gitea_bin.stat.islnk is defined

- uri:
    url: https://api.github.com/repos/go-gitea/gitea/releases/latest
    return_content: true
  register: json_response
  when: gitea_version == 'latest'

- set_fact:
    gitea_fetched_version: "{{ json_response.json.name }}"
  when: gitea_version == 'latest'

- set_fact:
    gitea_binary_url: "https://github.com/go-gitea/gitea/releases/download/{{ gitea_fetched_version }}/gitea-{{ gitea_fetched_version | replace('v','') }}-linux-amd64"
  when: gitea_version == 'latest'

- set_fact:
    gitea_binary_sig_url: "{{ gitea_binary_url }}.sha256"
  when: gitea_version == 'latest'

- name: Download Gitea.
  get_url:
    url: "{{ gitea_binary_url }}"
    dest: "{{ gitea_user_home }}/gitea/gitea"
    owner: "{{ gitea_user }}"
    group: "{{ gitea_user }}"
    mode: 0755
    checksum: "sha256: {{ lookup('url', gitea_binary_sig_url).split(' ')[0] }}"
  when: gitea_bin.stat.islnk is not defined or
        gitea_bin_version != gitea_version

- include: init-setup.yml
- include: gitea-mysql.yml
  when: gitea_use_mysql

- name: Create Gitea log folder.
  file:
    path: "{{ gitea_user_home }}/gitea/log"
    state: directory
    owner: "{{ gitea_user }}"
    group: "{{ gitea_user }}"
    mode: 0755

#- name: Check if gitea is already configured.
#  stat: path="{{ gitea_user_home }}/gitea/custom/conf/app.ini"
#  register: gitea_ini

- include: init-appini.yml
#  when: gitea_ini.stat.islnk is not defined

- name: Ensure Gitea is running.
  service: name=gitea state=started enabled=yes
